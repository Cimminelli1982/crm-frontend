{"version":3,"file":"static/js/936.3e84004f.chunk.js","mappings":"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","sources":["pages/companies/SimpleIntroductions.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { AgGridReact } from '../../ag-grid-setup';\nimport { FiEdit2, FiFileText, FiSearch, FiPlus, FiTrash2 } from 'react-icons/fi';\nimport { createGlobalStyle } from 'styled-components';\nimport { supabase } from '../../lib/supabaseClient';\nimport { toast } from 'react-toastify';\nimport IntroductionAddModal from '../../components/modals/IntroductionAddModal';\n\n// Custom toast styling and grid overrides - exact same as ContactsListTable\nconst ToastStyle = createGlobalStyle`\n  .Toastify__toast {\n    background-color: #121212;\n    color: #00ff00;\n    border: 1px solid #00ff00;\n    box-shadow: 0 0 10px rgba(0, 255, 0, 0.3);\n  }\n  \n  .Toastify__toast-body {\n    font-family: 'Courier New', monospace;\n    font-size: 14px;\n  }\n\n  .Toastify__progress-bar {\n    background: #00ff00;\n  }\n\n  .Toastify__close-button {\n    color: #00ff00;\n  }\n  \n  .Toastify__toast--success {\n    background-color: #121212;\n    border: 1px solid #00ff00;\n  }\n  \n  .Toastify__toast--error {\n    background-color: #121212;\n    border: 1px solid #ff3333;\n    color: #ff3333;\n  }\n  \n  /* AG Grid hover and selection overrides */\n  .ag-theme-alpine .ag-row:hover {\n    background-color: inherit !important;\n  }\n  .ag-theme-alpine .ag-row-odd:hover {\n    background-color: #1a1a1a !important;\n  }\n  .ag-theme-alpine .ag-row-even:hover {\n    background-color: #121212 !important;\n  }\n  .ag-theme-alpine .ag-row-selected {\n    background-color: inherit !important;\n  }\n  .ag-theme-alpine .ag-row-odd.ag-row-selected {\n    background-color: #1a1a1a !important;\n  }\n  .ag-theme-alpine .ag-row-even.ag-row-selected {\n    background-color: #121212 !important;\n  }\n`;\n\n// Styled components - exact same as ContactsListTable\nconst Container = styled.div`\n  height: calc(100vh - 60px);\n  width: 100%;\n  padding: 0 5px 0 0;\n  overflow: hidden;\n  box-sizing: border-box;\n  max-width: 100%;\n  position: relative;\n`;\n\n// Search bar components - exact same as before\nconst SearchBarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 20px;\n  gap: 10px;\n`;\n\nconst DealSearchInput = styled.input`\n  background-color: #222;\n  color: #fff;\n  border: 1px solid #444;\n  border-radius: 4px;\n  padding: 8px 12px 8px 40px;\n  font-family: 'Courier New', monospace;\n  font-size: 14px;\n  width: 300px;\n  transition: all 0.2s ease;\n  \n  &:focus {\n    outline: none;\n    border-color: #666;\n  }\n  \n  &::placeholder {\n    color: #666;\n    font-style: normal;\n    text-transform: uppercase;\n  }\n`;\n\nconst SearchInputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst SearchIconInside = styled.div`\n  position: absolute;\n  left: 12px;\n  color: #00ff00;\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  pointer-events: none;\n  z-index: 1;\n`;\n\n// Table container to account for search bar and filter buttons\nconst TableContainer = styled.div`\n  height: calc(100% - 140px);\n  width: 100%;\n  padding: 0 5px 0 0;\n  overflow: hidden;\n  box-sizing: border-box;\n  max-width: 100%;\n  position: relative;\n`;\n\nconst ErrorText = styled.div`\n  color: #ff3333;\n  background-color: #330000;\n  padding: 15px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n`;\n\nconst LoadingContainer = styled.div`\n  color: #00ff00;\n  text-align: center;\n  padding: 40px;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 400px;\n`;\n\nconst LoadingBar = styled.div`\n  width: 300px;\n  height: 8px;\n  background-color: #111;\n  margin: 20px 0;\n  border-radius: 4px;\n  overflow: hidden;\n  position: relative;\n  box-shadow: 0 0 10px rgba(0, 255, 0, 0.2);\n  \n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 30%;\n    background-color: #00ff00;\n    animation: pulse 1.5s ease-in-out infinite;\n    box-shadow: 0 0 20px #00ff00;\n    border-radius: 4px;\n  }\n  \n  @keyframes pulse {\n    0% {\n      left: -30%;\n      opacity: 0.8;\n    }\n    100% {\n      left: 100%;\n      opacity: 0.2;\n    }\n  }\n`;\n\nconst LoadingText = styled.div`\n  margin-top: 15px;\n  color: #00ff00;\n  text-shadow: 0 0 5px rgba(0, 255, 0, 0.5);\n  letter-spacing: 1px;\n  font-size: 16px;\n  opacity: 0.9;\n  animation: blink 1.5s ease-in-out infinite alternate;\n  \n  @keyframes blink {\n    from { opacity: 0.6; }\n    to { opacity: 1; }\n  }\n`;\n\n// Status renderer with color-coded dropdowns\nconst StatusRenderer = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(props.value || 'Requested');\n\n  const statusOptions = [\n    'Promised',\n    'Requested',\n    'Done & Dust',\n    'Aborted',\n    'Done, but need to monitor'\n  ];\n\n  const getStatusColor = (status) => {\n    switch (status?.toLowerCase()) {\n      case 'aborted': return '#ff0000';\n      default: return '#00ff00';\n    }\n  };\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setIsEditing(true);\n  };\n\n  const handleSave = async (newValue) => {\n    if (newValue === selectedValue) {\n      setIsEditing(false);\n      return;\n    }\n    \n    try {\n      // Update the database\n      const { error } = await supabase\n        .from('introductions')\n        .update({ status: newValue })\n        .eq('introduction_id', props.data.id);\n        \n      if (error) throw error;\n      \n      // Update local state\n      setSelectedValue(newValue);\n      props.setValue(newValue);\n      \n      // Update the data object\n      props.data.status = newValue;\n      \n      // Refresh the grid\n      if (props.api) {\n        props.api.refreshCells({\n          force: true,\n          rowNodes: [props.node],\n          columns: ['status']\n        });\n      }\n      \n      setIsEditing(false);\n      toast.success(`Status updated to \"${newValue}\"`);\n      \n    } catch (error) {\n      console.error('Error updating status:', error);\n      toast.error(`Failed to update status: ${error.message}`);\n      setIsEditing(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n  if (isEditing) {\n    return (\n      <select\n        value={selectedValue}\n        onChange={(e) => handleSave(e.target.value)}\n        onBlur={handleCancel}\n        autoFocus\n        style={{\n          background: '#1a1a1a',\n          color: '#00ff00',\n          border: '1px solid #00ff00',\n          borderRadius: '4px',\n          padding: '4px',\n          fontSize: '13px',\n          width: '100%',\n          height: '100%'\n        }}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {statusOptions.map(option => (\n          <option key={option} value={option} style={{ background: '#1a1a1a', color: '#00ff00' }}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  }\n\n  return (\n    <div\n      onClick={handleClick}\n      style={{\n        cursor: 'pointer',\n        padding: '4px',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        color: getStatusColor(selectedValue),\n        justifyContent: 'center'\n      }}\n      title=\"Click to edit status\"\n    >\n      {selectedValue || 'Select status'}\n    </div>\n  );\n};\n\n// Simple display-only renderer for People Introduced column\nconst PeopleIntroducedRenderer = (props) => {\n  const displayValue = props.value || '';\n  const isEmpty = !displayValue.trim();\n\n  return (\n    <div\n      style={{\n        padding: '2px 6px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        color: isEmpty ? '#666' : '#e0e0e0',\n        fontStyle: isEmpty ? 'italic' : 'normal',\n        textAlign: 'left',\n        fontSize: '16px',\n        fontWeight: '500'\n      }}\n      title={displayValue || 'People introduced'}\n    >\n      {isEmpty ? 'No people' : displayValue}\n    </div>\n  );\n};\n\n// Editable Notes renderer with cleaner UI\nconst NotesEditableRenderer = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentValue, setCurrentValue] = useState(props.value || '');\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setIsEditing(true);\n  };\n\n  const handleChange = (e) => {\n    setCurrentValue(e.target.value);\n  };\n\n  const handleBlur = async () => {\n    setIsEditing(false);\n    \n    if (currentValue !== (props.value || '')) {\n      const contactId = props.data?.id;\n      \n      if (!contactId) return;\n      \n      try {\n        // Update the database with the notes (text field)\n        const { error } = await supabase\n          .from('introductions')\n          .update({ text: currentValue })\n          .eq('introduction_id', contactId);\n          \n        if (error) throw error;\n        \n        toast.success('Note updated successfully');\n        props.setValue(currentValue);\n        \n      } catch (err) {\n        console.error('Error updating note:', err);\n        toast.error('Failed to update note');\n        // Reset to original value on error\n        setCurrentValue(props.value || '');\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleBlur();\n    }\n    if (e.key === 'Escape') {\n      setCurrentValue(props.value || '');\n      setIsEditing(false);\n    }\n  };\n\n  if (isEditing) {\n    return (\n      <div style={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '1px'\n      }}>\n        <input\n          type=\"text\"\n          value={currentValue}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyPress}\n          autoFocus\n          style={{\n            width: '100%',\n            height: '24px',\n            background: 'linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%)',\n            color: '#ffffff',\n            border: '1px solid #00ff00',\n            borderRadius: '4px',\n            padding: '2px 6px',\n            fontSize: '12px',\n            fontFamily: 'Courier New, monospace',\n            outline: 'none',\n            boxShadow: '0 0 4px rgba(0, 255, 0, 0.3)',\n            transition: 'all 0.2s ease',\n            boxSizing: 'border-box'\n          }}\n          placeholder=\"Enter note...\"\n        />\n      </div>\n    );\n  }\n\n  const displayValue = currentValue || props.value || '';\n  const isEmpty = !displayValue.trim();\n\n  return (\n    <div\n      onClick={handleClick}\n      style={{\n        cursor: 'pointer',\n        padding: '2px 6px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        color: isEmpty ? '#666' : '#e0e0e0',\n        fontStyle: isEmpty ? 'italic' : 'normal'\n      }}\n      title={displayValue || 'Click to add note'}\n    >\n      {isEmpty ? 'Add note' : displayValue}\n    </div>\n  );\n};\n\n// Enhanced general text renderer with improved styling\nconst EditableTextRenderer = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentValue, setCurrentValue] = useState(props.value || '');\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    setIsEditing(true);\n  };\n\n  const handleChange = (e) => {\n    setCurrentValue(e.target.value);\n  };\n\n  const handleBlur = async () => {\n    setIsEditing(false);\n    \n    if (currentValue !== (props.value || '')) {\n      const contactId = props.data?.id;\n      const fieldName = props.colDef.field;\n      \n      if (!contactId || !fieldName) return;\n      \n      try {\n        // Map frontend field names to database field names\n        const fieldMapping = {\n          'peopleIntroduced': null, // Contact IDs - will need special handling\n          'relatedCompanies': null, // Not available in schema\n          'notes': null, // Not available as direct field\n          'intro': 'text',\n          'rationale': 'category'\n        };\n        \n        const dbFieldName = fieldMapping[fieldName];\n        \n        // Skip fields that don't have direct database mapping\n        if (!dbFieldName) {\n          console.log(`Field ${fieldName} cannot be directly updated - no database mapping`);\n          return;\n        }\n        \n        // Update the database\n        const { error } = await supabase\n          .from('introductions')\n          .update({ [dbFieldName]: currentValue })\n          .eq('introduction_id', contactId);\n          \n        if (error) throw error;\n        \n        toast.success('Updated successfully');\n        props.setValue(currentValue);\n        \n      } catch (err) {\n        console.error('Error updating field:', err);\n        toast.error('Failed to update field');\n        // Reset to original value on error\n        setCurrentValue(props.value || '');\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleBlur();\n    }\n    if (e.key === 'Escape') {\n      setCurrentValue(props.value || '');\n      setIsEditing(false);\n    }\n  };\n\n  if (isEditing) {\n    return (\n      <div style={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '2px'\n      }}>\n        <input\n          type=\"text\"\n          value={currentValue}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyPress}\n          autoFocus\n          style={{\n            width: '100%',\n            height: '28px',\n            background: 'linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%)',\n            color: '#ffffff',\n            border: '2px solid #00ff00',\n            borderRadius: '6px',\n            padding: '4px 8px',\n            fontSize: '12px',\n            fontFamily: 'Courier New, monospace',\n            outline: 'none',\n            boxShadow: '0 0 8px rgba(0, 255, 0, 0.3), inset 0 2px 4px rgba(0, 0, 0, 0.2)',\n            transition: 'all 0.2s ease',\n            backdropFilter: 'blur(5px)'\n          }}\n          placeholder=\"Enter text...\"\n        />\n      </div>\n    );\n  }\n\n  const displayValue = currentValue || props.value || '';\n  const isEmpty = !displayValue.trim();\n\n  return (\n    <div\n      onClick={handleClick}\n      style={{\n        cursor: 'pointer',\n        padding: '2px 6px',\n        margin: '2px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        width: 'calc(100% - 4px)',\n        height: 'calc(100% - 4px)',\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: '3px',\n        background: isEmpty ? 'rgba(255, 255, 255, 0.02)' : 'transparent',\n        border: '1px solid transparent',\n        transition: 'all 0.2s ease',\n        color: isEmpty ? '#666' : '#e0e0e0',\n        fontStyle: isEmpty ? 'italic' : 'normal',\n        boxSizing: 'border-box'\n      }}\n      onMouseEnter={(e) => {\n        e.target.style.background = 'rgba(0, 255, 0, 0.08)';\n        e.target.style.border = '1px solid rgba(0, 255, 0, 0.4)';\n        e.target.style.boxShadow = 'inset 0 0 4px rgba(0, 255, 0, 0.2)';\n      }}\n      onMouseLeave={(e) => {\n        e.target.style.background = isEmpty ? 'rgba(255, 255, 255, 0.02)' : 'transparent';\n        e.target.style.border = '1px solid transparent';\n        e.target.style.boxShadow = 'none';\n      }}\n      title={displayValue || 'Click to edit'}\n    >\n      {isEmpty ? 'Click to add' : displayValue}\n    </div>\n  );\n};\n\n// Add New Button - exact same styling as AddDealButton\nconst AddNewButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background-color: #00ff00;\n  color: #000000;\n  border: 1px solid #00ff00;\n  border-radius: 4px;\n  padding: 8px 16px;\n  font-size: 14px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-family: 'Courier New', monospace;\n  box-shadow: 0 0 8px rgba(0, 255, 0, 0.3);\n  margin-left: auto; /* Push to the right */\n  \n  &:hover {\n    background-color: rgba(0, 255, 0, 0.9);\n    box-shadow: 0 0 12px rgba(0, 255, 0, 0.5);\n    text-shadow: 0 0 5px rgba(0, 255, 0, 0.5);\n  }\n  \n  svg {\n    font-size: 16px;\n  }\n`;\n\n// Category dropdown renderer for editing introduction categories\nconst CategoryDropdownRenderer = (props) => {\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(props.value || '');\n  \n  // Available category options for introductions\n  const categoryOptions = [\n    'Dealflow',\n    'Portfolio Company', \n    'Karma Points'\n  ];\n  \n  const handleClick = (e) => {\n    e.stopPropagation();\n    setIsEditing(true);\n  };\n  \n  const handleSave = async (newValue) => {\n    if (newValue === selectedValue) {\n      setIsEditing(false);\n      return;\n    }\n    \n    try {\n      // Update the database\n      const { error } = await supabase\n        .from('introductions')\n        .update({ category: newValue })\n        .eq('introduction_id', props.data.id);\n        \n      if (error) throw error;\n      \n      // Update local state\n      setSelectedValue(newValue);\n      props.setValue(newValue);\n      \n      // Update the data object\n      props.data.rationale = newValue;\n      \n      // Refresh the grid\n      if (props.api) {\n        props.api.refreshCells({\n          force: true,\n          rowNodes: [props.node],\n          columns: ['rationale']\n        });\n      }\n      \n      setIsEditing(false);\n      toast.success(`Category updated to \"${newValue}\"`);\n      \n    } catch (error) {\n      console.error('Error updating category:', error);\n      toast.error(`Failed to update category: ${error.message}`);\n      setIsEditing(false);\n    }\n  };\n  \n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n  \n  if (isEditing) {\n    return (\n      <select\n        value={selectedValue}\n        onChange={(e) => handleSave(e.target.value)}\n        onBlur={handleCancel}\n        autoFocus\n        style={{\n          background: '#1a1a1a',\n          color: '#00ff00',\n          border: '1px solid #00ff00',\n          borderRadius: '4px',\n          padding: '4px',\n          fontSize: '13px',\n          width: '100%',\n          height: '100%'\n        }}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {categoryOptions.map(option => (\n          <option key={option} value={option} style={{ background: '#1a1a1a', color: '#00ff00' }}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  }\n  \n  return (\n    <div\n      onClick={handleClick}\n      style={{\n        cursor: 'pointer',\n        padding: '4px',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        color: selectedValue ? '#e0e0e0' : '#888'\n      }}\n      title=\"Click to edit category\"\n    >\n      {selectedValue || 'Select category'}\n    </div>\n  );\n};\n\n// Actions renderer - shows delete button for each introduction\nconst ActionsRenderer = (props) => {\n  const handleDelete = async (e) => {\n    e?.stopPropagation(); // Prevent row selection\n    \n    if (!props.data || !props.data.id) {\n      console.error('No introduction ID found');\n      return;\n    }\n\n    const introductionId = props.data.id;\n    const confirmDelete = window.confirm(\n      'Are you sure you want to delete this introduction?\\n\\n' +\n      'This action cannot be undone.'\n    );\n\n    if (!confirmDelete) {\n      return;\n    }\n\n    try {\n      const { error } = await supabase\n        .from('introductions')\n        .delete()\n        .eq('introduction_id', introductionId);\n\n      if (error) throw error;\n\n      toast.success('Introduction deleted successfully!');\n      \n      // Refresh the data\n      if (props.context && props.context.refreshData) {\n        props.context.refreshData();\n      }\n    } catch (error) {\n      console.error('Error deleting introduction:', error);\n      toast.error(`Failed to delete introduction: ${error.message}`);\n    }\n  };\n\n  return (\n    <div \n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%'\n      }}\n    >\n      <button\n        onClick={handleDelete}\n        style={{\n          background: 'transparent',\n          border: 'none',\n          color: '#ff6b6b',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '20px',\n          height: '20px',\n          borderRadius: '3px',\n          transition: 'all 0.2s',\n          padding: '0',\n          margin: '0'\n        }}\n        title=\"Delete Introduction\"\n        onMouseEnter={(e) => {\n          e.target.style.transform = 'scale(1.1)';\n          e.target.style.color = '#ff5555';\n        }}\n        onMouseLeave={(e) => {\n          e.target.style.transform = 'scale(1)';\n          e.target.style.color = '#ff6b6b';\n        }}\n      >\n        <FiTrash2 size={14} />\n      </button>\n    </div>\n  );\n};\n\n// RelatedCompaniesRenderer - styled similar to CompanyRenderer but without X and plus buttons\nconst RelatedCompaniesRenderer = (props) => {\n  const [currentCompanyIndex, setCurrentCompanyIndex] = useState(0);\n  \n  // Parse companies from the relatedCompanies string (comma-separated)\n  const companiesString = props.value || '';\n  const companies = companiesString ? companiesString.split(', ').filter(name => name.trim()) : [];\n  const hasMultipleCompanies = companies.length > 1;\n  \n  // Navigation functions for company carousel\n  const goToNextCompany = (e) => {\n    e?.stopPropagation();\n    setCurrentCompanyIndex((prevIndex) => (prevIndex + 1) % companies.length);\n  };\n  \n  // Prevent event propagation\n  const handleContainerClick = (e) => {\n    e.stopPropagation();\n  };\n\n  if (!companies.length) {\n    return (\n      <div style={{\n        padding: '2px 4px',\n        color: '#666',\n        fontStyle: 'italic',\n        display: 'flex',\n        alignItems: 'center',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      }}>\n        No companies\n      </div>\n    );\n  }\n  \n  // Current company to display\n  const currentCompany = companies[currentCompanyIndex];\n  \n  // Navigation button styles\n  const navButtonStyle = {\n    background: 'none',\n    border: 'none',\n    color: '#ffffff',\n    cursor: 'pointer',\n    padding: '0',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '14px',\n    height: '14px',\n    fontSize: '10px',\n    opacity: '0.8'\n  };\n  \n  // Ensure consistent row height\n  const rowHeight = 36;\n  \n  return (\n    <div \n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        height: rowHeight + 'px',\n        minHeight: rowHeight + 'px',\n        width: '100%',\n        position: 'relative'\n      }}\n      onClick={handleContainerClick}\n    >\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: '4px'\n      }}>\n        {/* Company display with white outline box - tight around content */}\n        <div \n          style={{ \n            display: 'inline-flex', \n            alignItems: 'center',\n            backgroundColor: '#1a1a1a',\n            color: '#ffffff',\n            padding: '0px 6px',\n            borderRadius: '4px',\n            fontSize: '11px',\n            border: '1px solid #ffffff',\n            boxShadow: '0 0 4px rgba(255, 255, 255, 0.2)',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            lineHeight: '16px',\n            height: '18px',\n            position: 'relative',\n            maxWidth: '200px' // Prevent extremely long names from breaking layout\n          }}\n        >\n          <span \n            style={{ \n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              display: 'inline-block',\n              maxWidth: hasMultipleCompanies ? '120px' : '160px'\n            }}\n            title={currentCompany}\n          >\n            {currentCompany}\n          </span>\n          \n          {/* Counter indicator for multiple companies */}\n          {hasMultipleCompanies && (\n            <div style={{\n              fontSize: '9px',\n              color: '#cccccc',\n              marginLeft: '4px',\n              padding: '0 2px',\n              borderRadius: '3px',\n              backgroundColor: '#333333',\n              flexShrink: 0\n            }}>\n              {currentCompanyIndex + 1}/{companies.length}\n            </div>\n          )}\n        </div>\n        \n        {/* Right navigation arrow (only visible for multiple companies) */}\n        {hasMultipleCompanies && (\n          <button\n            onClick={goToNextCompany}\n            style={{\n              ...navButtonStyle,\n              marginLeft: '2px'\n            }}\n            title=\"Next company\"\n          >\n            &#9654;\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Main component\nconst SimpleIntroductions = () => {\n  const [introductions, setIntroductions] = useState([]);\n  const [filteredIntroductions, setFilteredIntroductions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [gridApi, setGridApi] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeCategory, setActiveCategory] = useState(null); // New state for category filter\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  // Fetch data from Supabase introductions table\n  const fetchIntroductions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const { data, error: fetchError } = await supabase\n        .from('introductions')\n        .select('*')\n        .order('created_at', { ascending: false });\n      \n      if (fetchError) throw fetchError;\n      \n      // Debug: Log the raw data to see actual column names\n      console.log('Raw introductions data from Supabase:', data);\n      if (data && data.length > 0) {\n        console.log('First row keys:', Object.keys(data[0]));\n        console.log('First row sample:', data[0]);\n      }\n      \n      // Get all unique contact IDs from the introductions\n      const allContactIds = new Set();\n      data?.forEach(intro => {\n        if (intro.contact_ids && Array.isArray(intro.contact_ids)) {\n          intro.contact_ids.forEach(id => allContactIds.add(id));\n        }\n      });\n      \n      // Fetch contact names for the contact IDs\n      let contactsMap = {};\n      let companiesMap = {};\n      if (allContactIds.size > 0) {\n        console.log('Fetching contacts for IDs:', Array.from(allContactIds));\n        \n        const { data: contactsData, error: contactsError } = await supabase\n          .from('contacts')\n          .select('contact_id, first_name, last_name')\n          .in('contact_id', Array.from(allContactIds));\n        \n        if (contactsError) {\n          console.error('Error fetching contacts:', contactsError);\n        } else {\n          console.log('Fetched contacts data:', contactsData);\n          \n          // Create a map of contact_id to full name\n          contactsData?.forEach(contact => {\n            const fullName = `${contact.first_name || ''} ${contact.last_name || ''}`.trim();\n            console.log(`Contact ${contact.contact_id}: first_name=\"${contact.first_name}\", last_name=\"${contact.last_name}\", combined=\"${fullName}\"`);\n            contactsMap[contact.contact_id] = fullName || 'Unknown Contact';\n          });\n          \n          console.log('Final contacts map:', contactsMap);\n          \n          // Check for missing contacts\n          const fetchedIds = new Set(contactsData?.map(c => c.contact_id) || []);\n          const missingIds = Array.from(allContactIds).filter(id => !fetchedIds.has(id));\n          if (missingIds.length > 0) {\n            console.warn('Contact IDs not found in database:', missingIds);\n          }\n        }\n        \n        // Fetch companies for the contacts\n        console.log('Fetching companies for contact IDs:', Array.from(allContactIds));\n        \n        const { data: contactCompaniesData, error: contactCompaniesError } = await supabase\n          .from('contact_companies')\n          .select(`\n            contact_id,\n            company_id,\n            companies!inner(\n              company_id,\n              name\n            )\n          `)\n          .in('contact_id', Array.from(allContactIds));\n          \n        if (contactCompaniesError) {\n          console.error('Error fetching contact companies:', contactCompaniesError);\n        } else {\n          console.log('Fetched contact companies data:', contactCompaniesData);\n          \n          // Create a map of contact_id to array of company names\n          contactCompaniesData?.forEach(contactCompany => {\n            const contactId = contactCompany.contact_id;\n            const companyName = contactCompany.companies?.name;\n            \n            if (companyName) {\n              if (!companiesMap[contactId]) {\n                companiesMap[contactId] = [];\n              }\n              companiesMap[contactId].push(companyName);\n            }\n          });\n          \n          console.log('Final companies map:', companiesMap);\n        }\n      }\n      \n      // Transform the data to match the expected format\n      const transformedData = data?.map((item, index) => {\n        // Build people introduced string from contact_ids\n        let peopleIntroduced = '';\n        if (item.contact_ids && Array.isArray(item.contact_ids)) {\n          const contactNames = item.contact_ids.map(id => {\n            if (contactsMap[id]) {\n              return contactsMap[id];\n            } else {\n              // Contact not found in database - likely deleted\n              return `🚫 Deleted Contact`;\n            }\n          });\n          peopleIntroduced = contactNames.join(' ↔ ');\n        }\n        \n        // Build related companies string from contact_ids\n        let relatedCompanies = '';\n        if (item.contact_ids && Array.isArray(item.contact_ids)) {\n          const allCompanies = new Set();\n          item.contact_ids.forEach(contactId => {\n            if (companiesMap[contactId]) {\n              companiesMap[contactId].forEach(companyName => {\n                allCompanies.add(companyName);\n              });\n            }\n          });\n          relatedCompanies = Array.from(allCompanies).join(', ');\n        }\n        \n        return {\n          id: item.introduction_id || index + 1,\n          date: item.introduction_date || (item.created_at ? new Date(item.created_at).toISOString().split('T')[0] : ''),\n          peopleIntroduced: peopleIntroduced,\n          relatedCompanies: relatedCompanies,\n          notes: '', // Will use the notes field for additional info\n          intro: item.text || '',\n          rationale: item.category || '',\n          status: item.status || 'Requested'\n        };\n      }) || [];\n      \n      console.log('Transformed data:', transformedData);\n      \n      setIntroductions(transformedData);\n      setFilteredIntroductions(transformedData);\n    } catch (err) {\n      console.error('Error fetching introductions:', err);\n      setError(`Failed to load introductions: ${err.message}`);\n      setIntroductions([]);\n      setFilteredIntroductions([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Column definitions with the requested fields\n  const columnDefs = useMemo(() => [\n    { \n      headerName: 'Date', \n      field: 'date',\n      valueFormatter: (params) => {\n        if (!params.value) return '';\n        try {\n          const date = new Date(params.value);\n          const day = String(date.getDate()).padStart(2, '0');\n          const month = String(date.getMonth() + 1).padStart(2, '0');\n          const year = String(date.getFullYear()).slice(-2);\n          return `${day}/${month}/${year}`;\n        } catch (error) {\n          return params.value;\n        }\n      },\n      minWidth: 80,\n      flex: 0.7,\n      filter: 'agDateColumnFilter',\n      floatingFilter: true,\n      sortable: true,\n      sort: 'desc',\n      initialSort: true,\n    },\n    { \n      headerName: 'People Introduced', \n      field: 'peopleIntroduced',\n      cellRenderer: PeopleIntroducedRenderer,\n      minWidth: 250,\n      flex: 4,\n      filter: 'agTextColumnFilter',\n      floatingFilter: true,\n      sortable: true,\n    },\n    { \n      headerName: 'Related Companies', \n      field: 'relatedCompanies',\n      cellRenderer: RelatedCompaniesRenderer,\n      minWidth: 200,\n      flex: 2.5,\n      filter: 'agTextColumnFilter',\n      floatingFilter: true,\n      sortable: true,\n    },\n    { \n      headerName: 'Notes', \n      field: 'intro',\n      cellRenderer: NotesEditableRenderer,\n      minWidth: 150,\n      flex: 1.8,\n      filter: 'agTextColumnFilter',\n      floatingFilter: true,\n      sortable: true,\n    },\n    { \n      headerName: 'Category', \n      field: 'rationale',\n      cellRenderer: CategoryDropdownRenderer,\n      minWidth: 150,\n      flex: 1.8,\n      filter: 'agTextColumnFilter',\n      floatingFilter: true,\n      sortable: true,\n    },\n    {\n      headerName: 'Status',\n      field: 'status',\n      cellRenderer: StatusRenderer,\n      minWidth: 100,\n      flex: 0.9,\n      filter: true,\n      floatingFilter: true,\n      sortable: true,\n      cellStyle: { \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n      }\n    },\n    {\n      headerName: 'Actions',\n      field: 'actions',\n      cellRenderer: ActionsRenderer,\n      minWidth: 70,\n      flex: 0.4,\n      filter: false,\n      floatingFilter: false,\n      sortable: false,\n      cellStyle: { \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n      }\n    }\n  ], []);\n  \n  // Default column properties\n  const defaultColDef = useMemo(() => ({\n    resizable: true,\n  }), []);\n\n  // Grid ready event handler\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    \n    requestAnimationFrame(() => {\n      setTimeout(() => {\n        try {\n          params.api.sizeColumnsToFit();\n          \n          setTimeout(() => {\n            try {\n              if (params.api.applyColumnState) {\n                params.api.applyColumnState({\n                  state: [{ colId: 'date', sort: 'desc' }],\n                  defaultState: { sort: null }\n                });\n              }\n            } catch (e) {\n              console.warn(\"Error setting column state:\", e);\n            }\n          }, 300);\n        } catch (e) {\n          console.warn(\"Error sizing columns:\", e);\n        }\n      }, 200);\n    });\n  };\n  \n  // Custom row height function\n  const getRowHeight = useCallback(() => {\n    return 36;\n  }, []);\n  \n  // Custom row style\n  const getRowStyle = useCallback((params) => {\n    return { \n      background: params.node.rowIndex % 2 === 0 ? '#121212' : '#1a1a1a',\n      borderRight: 'none'\n    };\n  }, []);\n\n  // Load data and expose refresh function\n  useEffect(() => {\n    fetchIntroductions();\n    \n    // Expose refresh function globally for status updates\n    window.refreshIntroductionsData = refreshData;\n    \n    // Cleanup\n    return () => {\n      delete window.refreshIntroductionsData;\n    };\n  }, []);\n\n  // Filter data based on search term and category\n  useEffect(() => {\n    let filtered = introductions;\n    \n    // Apply category filter first\n    if (activeCategory !== null) {\n      filtered = filtered.filter(intro => intro.rationale === activeCategory);\n    }\n    \n    // Then apply search filter\n    if (searchTerm.trim()) {\n      filtered = filtered.filter(intro => \n        Object.values(intro).some(value => \n          value && value.toString().toLowerCase().includes(searchTerm.toLowerCase())\n        )\n      );\n    }\n    \n    setFilteredIntroductions(filtered);\n  }, [searchTerm, introductions, activeCategory]);\n\n  // Handle window resize\n  useEffect(() => {\n    if (!gridApi) return;\n    \n    let resizeTimer;\n    let animationFrameId;\n    \n    const handleResize = () => {\n      clearTimeout(resizeTimer);\n      cancelAnimationFrame(animationFrameId);\n      \n      resizeTimer = setTimeout(() => {\n        animationFrameId = requestAnimationFrame(() => {\n          try {\n            gridApi.sizeColumnsToFit();\n          } catch (e) {\n            console.warn(\"Error resizing grid:\", e);\n          }\n        });\n      }, 500);\n    };\n    \n    window.addEventListener('resize', handleResize, { passive: true });\n    \n    return () => {\n      window.removeEventListener('resize', handleResize, { passive: true });\n      clearTimeout(resizeTimer);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [gridApi]);\n\n  // Refresh data function\n  const refreshData = () => {\n    fetchIntroductions();\n  };\n\n  // Handle adding new introduction\n  const handleAddNew = () => {\n    console.log('Add new introduction clicked');\n    setShowAddModal(true);\n  };\n\n  // Handle category filter\n  const handleCategoryFilter = (category) => {\n    // Toggle: if the same category is clicked, deselect it (show all)\n    if (activeCategory === category) {\n      setActiveCategory(null);\n      console.log('Deselecting category, showing all results');\n    } else {\n      setActiveCategory(category);\n      console.log('Filtering by category:', category);\n    }\n  };\n\n  return (\n    <Container>\n      <ToastStyle />\n      \n      {/* Search Bar - exact same as before */}\n      <SearchBarContainer>\n        <SearchInputContainer>\n          <SearchIconInside>\n            <FiSearch />\n          </SearchIconInside>\n          <DealSearchInput\n            type=\"text\"\n            placeholder=\"SEARCH...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </SearchInputContainer>\n        {searchTerm && (\n          <button\n            onClick={() => setSearchTerm('')}\n            style={{\n              background: 'transparent',\n              border: 'none',\n              color: '#00ff00',\n              cursor: 'pointer',\n              fontSize: '16px',\n              padding: '4px'\n            }}\n            title=\"Clear search\"\n          >\n            ✕\n          </button>\n        )}\n      </SearchBarContainer>\n      \n      {/* Filter Buttons - exact same styling as Invested/Monitoring buttons */}\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', margin: '0 20px' }}>\n        <div style={{ display: 'flex', alignItems: 'center', margin: '20px 0', gap: '10px' }}>\n          {/* Dealflow Filter Button */}\n          <button\n            onClick={() => handleCategoryFilter('Dealflow')}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              backgroundColor: activeCategory === 'Dealflow' ? 'rgba(0, 255, 0, 0.4)' : 'rgba(0, 255, 0, 0.2)',\n              color: '#00ff00',\n              border: '1px solid #00ff00',\n              borderRadius: '4px',\n              padding: '8px 16px',\n              fontSize: '0.9rem',\n              fontWeight: 'bold',\n              cursor: 'pointer',\n              transition: 'all 0.2s ease',\n              fontFamily: 'Courier New, monospace',\n              boxShadow: activeCategory === 'Dealflow' ? '0 0 12px rgba(0, 255, 0, 0.5)' : '0 0 8px rgba(0, 255, 0, 0.3)'\n            }}\n            onMouseOver={(e) => {\n              if (activeCategory !== 'Dealflow') {\n              e.currentTarget.style.backgroundColor = 'rgba(0, 255, 0, 0.3)';\n              e.currentTarget.style.boxShadow = '0 0 12px rgba(0, 255, 0, 0.5)';\n              }\n            }}\n            onMouseOut={(e) => {\n              if (activeCategory !== 'Dealflow') {\n              e.currentTarget.style.backgroundColor = 'rgba(0, 255, 0, 0.2)';\n              e.currentTarget.style.boxShadow = '0 0 8px rgba(0, 255, 0, 0.3)';\n              }\n            }}\n          >\n            Dealflow\n          </button>\n\n          {/* Portfolio Company Filter Button */}\n          <button\n            onClick={() => handleCategoryFilter('Portfolio Company')}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              backgroundColor: activeCategory === 'Portfolio Company' ? 'rgba(0, 255, 0, 0.4)' : 'rgba(0, 255, 0, 0.2)',\n              color: '#00ff00',\n              border: '1px solid #00ff00',\n              borderRadius: '4px',\n              padding: '8px 16px',\n              fontSize: '0.9rem',\n              fontWeight: 'bold',\n              cursor: 'pointer',\n              transition: 'all 0.2s ease',\n              fontFamily: 'Courier New, monospace',\n              boxShadow: activeCategory === 'Portfolio Company' ? '0 0 12px rgba(0, 255, 0, 0.5)' : '0 0 8px rgba(0, 255, 0, 0.3)'\n            }}\n            onMouseOver={(e) => {\n              if (activeCategory !== 'Portfolio Company') {\n              e.currentTarget.style.backgroundColor = 'rgba(0, 255, 0, 0.3)';\n              e.currentTarget.style.boxShadow = '0 0 12px rgba(0, 255, 0, 0.5)';\n              }\n            }}\n            onMouseOut={(e) => {\n              if (activeCategory !== 'Portfolio Company') {\n              e.currentTarget.style.backgroundColor = 'rgba(0, 255, 0, 0.2)';\n              e.currentTarget.style.boxShadow = '0 0 8px rgba(0, 255, 0, 0.3)';\n              }\n            }}\n          >\n            Portfolio Company\n          </button>\n\n          {/* Karma Points Filter Button */}\n          <button\n            onClick={() => handleCategoryFilter('Karma Points')}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              backgroundColor: activeCategory === 'Karma Points' ? 'rgba(0, 255, 0, 0.4)' : 'rgba(0, 255, 0, 0.2)',\n              color: '#00ff00',\n              border: '1px solid #00ff00',\n              borderRadius: '4px',\n              padding: '8px 16px',\n              fontSize: '0.9rem',\n              fontWeight: 'bold',\n              cursor: 'pointer',\n              transition: 'all 0.2s ease',\n              fontFamily: 'Courier New, monospace',\n              boxShadow: activeCategory === 'Karma Points' ? '0 0 12px rgba(0, 255, 0, 0.5)' : '0 0 8px rgba(0, 255, 0, 0.3)'\n            }}\n            onMouseOver={(e) => {\n              if (activeCategory !== 'Karma Points') {\n              e.currentTarget.style.backgroundColor = 'rgba(0, 255, 0, 0.3)';\n              e.currentTarget.style.boxShadow = '0 0 12px rgba(0, 255, 0, 0.5)';\n              }\n            }}\n            onMouseOut={(e) => {\n              if (activeCategory !== 'Karma Points') {\n              e.currentTarget.style.backgroundColor = 'rgba(0, 255, 0, 0.2)';\n              e.currentTarget.style.boxShadow = '0 0 8px rgba(0, 255, 0, 0.3)';\n              }\n            }}\n          >\n            Karma Points\n          </button>\n        </div>\n        <AddNewButton onClick={handleAddNew}>\n          <FiPlus /> ADD NEW\n        </AddNewButton>\n      </div>\n      \n      <TableContainer>\n        {error && <ErrorText>Error: {error}</ErrorText>}\n        \n        {loading ? (\n          <LoadingContainer>\n            <LoadingText>Loading introductions...</LoadingText>\n            <LoadingBar />\n          </LoadingContainer>\n        ) : filteredIntroductions.length === 0 ? (\n          <div style={{ \n            padding: '40px', \n            textAlign: 'center',\n            color: '#00ff00',\n            background: '#121212',\n            borderRadius: '8px'\n          }}>\n            {searchTerm ? `No introductions found matching \"${searchTerm}\"` : 'No introductions found.'}\n          </div>\n        ) : (\n          <div \n            className=\"ag-theme-alpine\" \n            style={{ \n              height: 'calc(100% - 5px)', \n              width: '100%',\n              overflowX: 'hidden',\n              boxSizing: 'border-box',\n              marginRight: '5px',\n              '--ag-background-color': '#121212',\n              '--ag-odd-row-background-color': '#1a1a1a',\n              '--ag-header-background-color': '#222222',\n              '--ag-header-foreground-color': '#00ff00',\n              '--ag-foreground-color': '#e0e0e0', \n              '--ag-row-hover-color': 'transparent',\n              '--ag-border-color': '#333333',\n              '--ag-cell-horizontal-padding': '8px',\n              '--ag-borders': 'none',\n              '--ag-header-height': '32px',\n              '--ag-header-column-separator-display': 'none',\n              '--ag-font-size': '12px',\n              '--ag-paging-panel-height': '42px',\n              '--ag-row-height': '36px'\n            }}\n          >\n            <AgGridReact\n              rowData={filteredIntroductions}\n              columnDefs={columnDefs}\n              defaultColDef={defaultColDef}\n              onGridReady={onGridReady}\n              rowSelection=\"none\"\n              animateRows={false}\n              pagination={true}\n              paginationPageSize={100}\n              suppressCellFocus={true}\n              enableCellTextSelection={true}\n              getRowHeight={getRowHeight}\n              getRowStyle={getRowStyle}\n              suppressHorizontalScroll={true}\n              paginationNumberFormatter={(params) => {\n                return `${params.value}`; \n              }}\n              alwaysShowHorizontalScroll={false}\n              alwaysShowVerticalScroll={false}\n              overlayNoRowsTemplate='<span style=\"padding: 10px; border: 1px solid #00ff00; background: #121212; color: #00ff00;\">No introductions found</span>'\n            />\n          </div>\n        )}\n      </TableContainer>\n\n      {showAddModal && (\n        <IntroductionAddModal\n          isOpen={showAddModal}\n          onClose={() => setShowAddModal(false)}\n          onSave={refreshData}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default SimpleIntroductions; "],"names":["ToastStyle","createGlobalStyle","Container","styled","div","SearchBarContainer","DealSearchInput","input","SearchInputContainer","SearchIconInside","TableContainer","ErrorText","LoadingContainer","LoadingBar","LoadingText","StatusRenderer","props","isEditing","setIsEditing","useState","selectedValue","setSelectedValue","value","statusOptions","handleCancel","_jsx","onChange","e","async","newValue","error","supabase","from","update","status","eq","data","id","setValue","api","refreshCells","force","rowNodes","node","columns","toast","success","console","message","handleSave","target","onBlur","autoFocus","style","background","color","border","borderRadius","padding","fontSize","width","height","onClick","stopPropagation","children","map","option","cursor","display","alignItems","toLowerCase","justifyContent","title","PeopleIntroducedRenderer","displayValue","isEmpty","trim","whiteSpace","overflow","textOverflow","fontStyle","textAlign","fontWeight","NotesEditableRenderer","currentValue","setCurrentValue","handleChange","handleBlur","_props$data","contactId","text","err","handleKeyPress","key","type","onKeyDown","fontFamily","outline","boxShadow","transition","boxSizing","placeholder","AddNewButton","button","CategoryDropdownRenderer","React","categoryOptions","category","rationale","ActionsRenderer","introductionId","window","confirm","delete","context","refreshData","margin","onMouseEnter","transform","onMouseLeave","FiTrash2","size","RelatedCompaniesRenderer","currentCompanyIndex","setCurrentCompanyIndex","companiesString","companies","split","filter","name","hasMultipleCompanies","length","currentCompany","rowHeight","minHeight","position","_jsxs","gap","backgroundColor","lineHeight","maxWidth","marginLeft","flexShrink","prevIndex","opacity","SimpleIntroductions","introductions","setIntroductions","filteredIntroductions","setFilteredIntroductions","loading","setLoading","setError","gridApi","setGridApi","searchTerm","setSearchTerm","activeCategory","setActiveCategory","showAddModal","setShowAddModal","fetchIntroductions","fetchError","select","order","ascending","log","Object","keys","allContactIds","Set","forEach","intro","contact_ids","Array","isArray","add","contactsMap","companiesMap","contactsData","contactsError","in","contact","fullName","first_name","last_name","contact_id","fetchedIds","c","missingIds","has","warn","contactCompaniesData","contactCompaniesError","contactCompany","_contactCompany$compa","companyName","push","transformedData","item","index","peopleIntroduced","join","relatedCompanies","allCompanies","introduction_id","date","introduction_date","created_at","Date","toISOString","notes","columnDefs","useMemo","headerName","field","valueFormatter","params","day","String","getDate","padStart","month","getMonth","getFullYear","slice","minWidth","flex","floatingFilter","sortable","sort","initialSort","cellRenderer","cellStyle","defaultColDef","resizable","getRowHeight","useCallback","getRowStyle","rowIndex","borderRight","useEffect","refreshIntroductionsData","filtered","values","some","toString","includes","resizeTimer","animationFrameId","handleResize","clearTimeout","cancelAnimationFrame","setTimeout","requestAnimationFrame","sizeColumnsToFit","addEventListener","passive","removeEventListener","handleCategoryFilter","FiSearch","onMouseOver","currentTarget","onMouseOut","handleAddNew","FiPlus","className","overflowX","marginRight","AgGridReact","rowData","onGridReady","applyColumnState","state","colId","defaultState","rowSelection","animateRows","pagination","paginationPageSize","suppressCellFocus","enableCellTextSelection","suppressHorizontalScroll","paginationNumberFormatter","alwaysShowHorizontalScroll","alwaysShowVerticalScroll","overlayNoRowsTemplate","IntroductionAddModal","isOpen","onClose","onSave"],"sourceRoot":""}